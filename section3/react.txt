react의 기술적인 특징
1.컴포넌트를 기반으로 UI를 표현한다
header, main, footer 등을 컴포넌트로 만들어 모듈화 하여 작업할 수 있고, 중복코드를 제거하는데 효율적이다.

2.화면 업데이트 구현이 쉽다
업데이트: 사용자의 행동(클릭, 드래그)에 따라 웹 페이지가 스스로 모습을 바꿔 상호작용 하는 것
선언형 프로그래밍 : 과정은 생략하고 목적만 간결히 명시하는 방법
리액트는 선언형 프로그래밍을 이용함
명령형 프로그래밍 : 목적을 이루기 위한 모든 일련의 과정을 설명하는 방식
선언형 프로그래밍 <-> 명령형 프로그래밍
ex)가게에서 주문시
선언형 : 파스타 하나 주세요
명령형 : 파스타면 100g을 7분30초로 삶고~~ 등으로 처리 

리액트는 선언형 프로그래밍을 사용하므로 코드가 간결함
리액트는 컴포넌트별로 개발하며 컴포넌트마다 상태를 저장하는 state함수가 있는데, state값에 따라 다른 화면을 랜더링할 수 있음
*랜더링 : UI요소를 화면에 그려내는 것

3.화면 업데이트가 빠르게 처리된다.
브라우저의 랜더링과정(critical rendering path) - 웹페이지를 랜더링 하기 위한 중요한 경로
1.html을 dom(문서객체모델), css를 cssom(오브젝트모델)으로 변환 브라우저가 이해하기 편하게 바꿈
2.dom과 cssom이 합쳐져서 render tree를 만듬
render tree는 웹페이지의 청사진으로 표현되는데,요소들의 위치, 모양, 스타일 등에 대한 정보가 있음
3.layout으로 요소의 배치를 잡는 작업을 함
4.painting 작업으로 화면에 그림

js로 업데이트가 될 경우 dom, rander-tree, layout, painting이 다시 시작되는데 layout, painting의 시간이 오래걸림
dom 수정을 최소화하는 것이 좋은데 서비스의 규모가 커질수록 어려움
react는 dom수정을 자동으로 구현해줌
why? react는 virtual dom을 사용
virtual dom이란 dom을 자바스크립트 객체로 흉내낸 것으로 일종의 복제판이라고 생각하면된다.
react는 업데이트가 발생하면 실제 dom을 수정하기 전 가상의 dom에 먼저 반영해본다.
가상의 dom에 업데이트가 끝났으면 실제 dom에 업데이트가 되므로, 가상의 dom에 몇 번의 업데이트가 있던지간에 실제 dom에는 한 번의 업데이트만 있다.

------------
리액트로 만든 것을 리액트앱, 리액트 애플리케이션이라고 불린다.


